[{"D:\\xampp\\htdocs\\MERN-app\\client\\src\\index.js":"1","D:\\xampp\\htdocs\\MERN-app\\client\\src\\App.js":"2","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Posts\\Posts.js":"3","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Posts\\Post\\Post.js":"4","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Form\\Form.js":"5","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Posts\\styles.js":"6","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Posts\\Post\\styles.js":"7","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Form\\styles.js":"8","D:\\xampp\\htdocs\\MERN-app\\client\\src\\reducers\\index.js":"9","D:\\xampp\\htdocs\\MERN-app\\client\\src\\reducers\\posts.js":"10","D:\\xampp\\htdocs\\MERN-app\\client\\src\\actions\\posts.js":"11","D:\\xampp\\htdocs\\MERN-app\\client\\src\\api\\index.js":"12","D:\\xampp\\htdocs\\MERN-app\\client\\src\\constants\\actionTypes.js":"13","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Navbar\\Navbar.js":"14","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Navbar\\styles.js":"15","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Home\\Home.js":"16","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Auth\\Auth.js":"17","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Auth\\styles.js":"18","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Auth\\Input.js":"19","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Auth\\Icon.js":"20","D:\\xampp\\htdocs\\MERN-app\\client\\src\\reducers\\auth.js":"21","D:\\xampp\\htdocs\\MERN-app\\client\\src\\actions\\auth.js":"22"},{"size":655,"mtime":1610717864797,"results":"23","hashOfConfig":"24"},{"size":814,"mtime":1611134368891,"results":"25","hashOfConfig":"24"},{"size":910,"mtime":1610796749466,"results":"26","hashOfConfig":"24"},{"size":5056,"mtime":1611719375425,"results":"27","hashOfConfig":"24"},{"size":3331,"mtime":1611574418030,"results":"28","hashOfConfig":"24"},{"size":278,"mtime":1610364208630,"results":"29","hashOfConfig":"24"},{"size":1073,"mtime":1610618010265,"results":"30","hashOfConfig":"24"},{"size":447,"mtime":1610364185886,"results":"31","hashOfConfig":"24"},{"size":163,"mtime":1611141195764,"results":"32","hashOfConfig":"24"},{"size":719,"mtime":1610859986349,"results":"33","hashOfConfig":"24"},{"size":1430,"mtime":1611579937730,"results":"34","hashOfConfig":"24"},{"size":927,"mtime":1611724248898,"results":"35","hashOfConfig":"24"},{"size":231,"mtime":1611141069583,"results":"36","hashOfConfig":"24"},{"size":2075,"mtime":1611661972282,"results":"37","hashOfConfig":"24"},{"size":953,"mtime":1611133772620,"results":"38","hashOfConfig":"24"},{"size":1455,"mtime":1611134166915,"results":"39","hashOfConfig":"24"},{"size":4823,"mtime":1611373093862,"results":"40","hashOfConfig":"24"},{"size":666,"mtime":1611128107870,"results":"41","hashOfConfig":"24"},{"size":936,"mtime":1611127447603,"results":"42","hashOfConfig":"24"},{"size":518,"mtime":1611139609478,"results":"43","hashOfConfig":"24"},{"size":552,"mtime":1611372497490,"results":"44","hashOfConfig":"24"},{"size":701,"mtime":1611374029442,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"172mcnw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\xampp\\htdocs\\MERN-app\\client\\src\\index.js",[],["98","99"],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\App.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Posts\\Posts.js",["100","101"],"import React,{useState} from 'react';\r\nimport Post from './Post/Post';\r\nimport {Grow ,Grid, CircularProgress } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport {useSelector} from 'react-redux';\r\n \r\n\r\nconst Posts= ({setCurrentId} ) => {\r\n\r\n    const posts = useSelector((state) =>  state.posts);\r\n\r\n    console.log(posts);\r\n\r\n    const classes = useStyles();\r\n   \r\n  \r\n    return (\r\n        !posts.length ? <CircularProgress /> : (\r\n            \r\n        \r\n            <Grid  className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n              {posts.map((post) => (\r\n   \r\n                <Grid  key={post._id} item xs={12} sm={6} md={6}>\r\n                  <Post post={post} setCurrentId = {setCurrentId}   />\r\n                </Grid>\r\n                 \r\n              ))}\r\n            </Grid> \r\n           \r\n             \r\n          )\r\n    )\r\n}\r\n\r\nexport default Posts","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Posts\\Post\\Post.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Form\\Form.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Posts\\styles.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Posts\\Post\\styles.js",["102","103","104"],"import { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\n \r\n\r\n\r\n\r\n\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n \r\n});\r\n ","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Form\\styles.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\reducers\\index.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\reducers\\posts.js",["105"],"import {FETCH_ALL,CREATE,UPDATE,DELETE, LIKE} from '../constants/actionTypes';\r\n\r\n\r\nexport default (posts=[] , action) => {\r\n\r\n    switch (action.type) {\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        \r\n        case CREATE:\r\n            return [...posts,action.payload];\r\n\r\n        case UPDATE:\r\n            return  posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n            \r\n        case LIKE:\r\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n        \r\n        case DELETE:\r\n        return  posts.filter((post) => post._id !== action.payload);\r\n\r\n        default:\r\n        return   posts;  \r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","D:\\xampp\\htdocs\\MERN-app\\client\\src\\actions\\posts.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\api\\index.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\constants\\actionTypes.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Navbar\\Navbar.js",["106","107"],"import React, { useState, useEffect } from 'react';\r\nimport { AppBar,Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport postimg from '../../images/post.png';\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  \r\n  useEffect(() => {\r\n\r\n    const token = user?.token;\r\n    //JWT...later \r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n\r\n\r\n    if(token)\r\n    {\r\n      const decodedToken = decode(token);\r\n\r\n      if(decodedToken.exp * 1000 <new Date().getTime())  \r\n      logout();\r\n\r\n    }\r\n  },[location]);\r\n\r\n  const logout = () => {\r\n    dispatch({type: 'LOGOUT'});\r\n    history.push('/');\r\n    setUser(null);\r\n  };\r\n\r\n \r\n  return (\r\n    <AppBar className={classes.appBar} position=\"fixed\" color=\"secondary\" >\r\n      <div className={classes.brandContainer} >\r\n      <Link  to=\"/\" className={classes.nav} >\r\n      <img className={classes.image} src={postimg} alt=\"icon\" height=\"64\" />\r\n \r\n      </Link>\r\n      </div>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Navbar\\styles.js",["108"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 50px',\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n  },\r\n  nav: {\r\n    display: 'flex',\r\n    textDecoration: 'none',\r\n  },\r\n\r\n  heading: {\r\n     \r\n     \r\n    alignSelf: 'center',\r\n    \r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    width: '400px',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '400px',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n  },\r\n \r\n}));","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Home\\Home.js",["109","110","111","112","113","114"],"import React, { useState, useEffect } from 'react';\r\nimport { Zoom, Box, Container,  Grow, Grid } from '@material-ui/core';\r\nimport { spacing } from '@material-ui/system';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport Posts from '../Posts/Posts';\r\nimport { useDispatch } from 'react-redux';\r\nimport Form from '../Form/Form';\r\nimport { getPosts } from '../../actions/posts';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport  '../../styles.scss';\r\n\r\n \r\nconst Home = () => {\r\n\r\n \r\n    const [currentId, setCurrentId] = useState(null);\r\n  \r\n  \r\n    const dispatch = useDispatch();\r\n  \r\n    useEffect(() => {\r\n  \r\n      dispatch(getPosts());\r\n      \r\n    \r\n    },[dispatch]);\r\n\r\n \r\n\r\n    return (\r\n        <>\r\n\r\n<Box mt={10}> \r\n    <Container maxWidth=\"xl\"  >\r\n        <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n          <Grid item xs={12} sm={7} lg={8}>\r\n             <Posts setCurrentId={setCurrentId}/>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}   lg={4}>\r\n            <Form  currentId={currentId} setCurrentId={setCurrentId}/>\r\n          </Grid>\r\n        </Grid>\r\n  </Container>\r\n  </Box>\r\n  <Zoom in  timeout={500} >\r\n  <Fab color=\"secondary\" aria-label=\"add\" className=\"fixed\" >\r\n        <AddIcon />\r\n      </Fab>\r\n  </Zoom>\r\n\r\n\r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Auth\\Auth.js",["115","116"],"import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Avatar, Button, Paper,Box,  Grid, TextField, Typography, Container } from '@material-ui/core';\r\nimport {GoogleLogin} from \"react-google-login\";\r\nimport { Switch, useHistory } from 'react-router-dom';\r\nimport useStyles from './styles';\r\nimport {signup, signin } from '../../actions/auth';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Input from './Input';\r\nimport Icon from './Icon';\r\n\r\n\r\nconst initialState = {firstName: '',lastName: '', email:'', password:'', confirmPassword:'' };\r\n\r\nconst Auth = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [showPassword,setShowPassword] = useState(false);\r\n    const [formdata,setFormData] = useState(initialState);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n  \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(isSignup) {\r\n            dispatch(signup(formdata,history))\r\n        }\r\n        else {\r\n            dispatch(signin(formdata,history))\r\n\r\n        }\r\n\r\n        console.log(formdata);\r\n    };\r\n   \r\n    const handleChange = (e) => {\r\n        setFormData({...formdata, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const handleShowPassword = () =>setShowPassword(\r\n        (prevShowPassword) => !prevShowPassword\r\n    );\r\n\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup) => !prevIsSignup);\r\n        setShowPassword(false);\r\n    }\r\n\r\n    const googleSuccess = async (res) => {\r\n      const result = res?.profileObj;\r\n      const token = res?.tokenId;\r\n      try{\r\n        dispatch({ type: 'AUTH', data:{result,token}});\r\n        history.push('/');\r\n      }\r\n      catch(error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    const googleFailure = () => {\r\n        console.log(\"google login was failed, plz try again later.\")\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Box mt={20} >\r\n        <Container component=\"main\" maxWidth=\"xs\"  >\r\n            <Paper className={classes.paper} elevation={3}>\r\n            <Avatar className={classes.avatar}>\r\n             <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography variant=\"h5\">{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\r\n            <form className={classes.form}   onSubmit={handleSubmit}   >\r\n                <Grid spacing ={3} container >\r\n                    {\r\n                    isSignup && (\r\n                        <>\r\n                        <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                        <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />  \r\n                        </>\r\n                    )}\r\n\r\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\r\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\r\n                        { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\r\n \r\n                </Grid>\r\n               \r\n                <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                    { isSignup ? 'Sign Up' : 'Sign In' }\r\n                </Button>\r\n                <GoogleLogin \r\n                    clientId=\"1095827748467-b1l72q3hc2ib39o1iulpdemi5r6h6spg.apps.googleusercontent.com\"\r\n                    render={(rednderProps) => (\r\n                        <Button \r\n                        className={classes.googleButton} color=\"primary\" \r\n                        fullWidth onClick={rednderProps.onClick} \r\n                        disabled = {rednderProps.disabled} \r\n                        variant=\"contained\" \r\n                        startIcon={<Icon />}\r\n                        > \r\n                        Google Sign In\r\n                        </Button>\r\n                 \r\n                    )}\r\n                    onSuccess={googleSuccess}\r\n                    onFailure={googleFailure}\r\n                    cookiePolicy=\"single_host_origin\"\r\n                />\r\n                <Grid container justify=\"center\">\r\n                        <Grid item>\r\n                            <Button onClick={switchMode} disableElevation color=\"secondary\" fullWidth> \r\n                            {isSignup ? 'Alrealdy have an account? Sign In' : \"Don't have an account? Sign Up Now\"}\r\n                            </Button>\r\n                        </Grid>\r\n                </Grid>\r\n            </form>\r\n            </Paper>        \r\n        </Container>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n\r\n\r\n\r\n","D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Auth\\styles.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Auth\\Input.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\components\\Auth\\Icon.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\reducers\\auth.js",[],"D:\\xampp\\htdocs\\MERN-app\\client\\src\\actions\\auth.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":15,"nodeType":"123","messageId":"124","endLine":1,"endColumn":23},{"ruleId":"121","severity":1,"message":"125","line":3,"column":9,"nodeType":"123","messageId":"124","endLine":3,"endColumn":13},{"ruleId":"121","severity":1,"message":"126","line":1,"column":10,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"127","line":1,"column":26,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"121","severity":1,"message":"128","line":1,"column":50,"nodeType":"123","messageId":"124","endLine":1,"endColumn":63},{"ruleId":"129","severity":1,"message":"130","line":4,"column":1,"nodeType":"131","endLine":30,"endColumn":2},{"ruleId":"121","severity":1,"message":"132","line":7,"column":13,"nodeType":"123","messageId":"124","endLine":7,"endColumn":23},{"ruleId":"133","severity":1,"message":"134","line":33,"column":5,"nodeType":"135","endLine":33,"endColumn":15,"suggestions":"136"},{"ruleId":"121","severity":1,"message":"137","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":20},{"ruleId":"121","severity":1,"message":"125","line":2,"column":33,"nodeType":"123","messageId":"124","endLine":2,"endColumn":37},{"ruleId":"121","severity":1,"message":"138","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"139","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":23},{"ruleId":"121","severity":1,"message":"140","line":4,"column":25,"nodeType":"123","messageId":"124","endLine":4,"endColumn":31},{"ruleId":"121","severity":1,"message":"141","line":4,"column":33,"nodeType":"123","messageId":"124","endLine":4,"endColumn":38},{"ruleId":"121","severity":1,"message":"142","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":14},{"ruleId":"121","severity":1,"message":"143","line":3,"column":44,"nodeType":"123","messageId":"124","endLine":3,"endColumn":53},{"ruleId":"121","severity":1,"message":"140","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":16},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Grow' is defined but never used.","'createMuiTheme' is defined but never used.","'withStyles' is defined but never used.","'ThemeProvider' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'actionType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["146"],"'deepPurple' is defined but never used.","'spacing' is defined but never used.","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Navbar' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"149","text":"150"},[963,973],"[location, logout, user?.token]"]